#!/usr/bin/env bash

# init fzf
if [ -n "$BASH_VERSION" ] && [ -e ~/.fzf.bash ]; then
    if [ "$OSTYPE" != "msys" ]; then
        # shellcheck disable=SC1090
        source ~/.fzf.bash
    fi
    bind -r ''  # fzf-file-widget
    bind '"": transpose-chars'
    bind -x '"": "fzf-file-widget"'
    bind -r '\ec'
    bind '"\ec": capitalize-word'
    # shellcheck disable=SC2016
    bind '"d":"$(__fzf_cd__)"'
    export FZF_COMPLETION_TRIGGER=','
fi

# init pyenv
if [ "$OSTYPE" != "msys" ] && [ -d "$HOME/.pyenv" ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init -)"
    fi
fi

# pipenv
if command -v pyenv 1>/dev/null 2>&1; then
    _pipenv_completion() {
        local IFS=$'\t'
        # shellcheck disable=SC2207
        COMPREPLY=( $( env COMP_WORDS="${COMP_WORDS[*]}" \
                           COMP_CWORD="$COMP_CWORD" \
                           _PIPENV_COMPLETE=complete-bash "$1" ) )
        return 0
    }
    complete -F _pipenv_completion -o default pipenv
fi

# pyfiledir
function _setup_pyfiledir {
    export PY_COMP_ROOT="$HOME/.pyfiledir"
    export PATH="$PY_COMP_ROOT/bin:$PATH"
    local comp_file
    local key_binding_file
    if [ "$OSTYPE" == "msys" ]; then
        comp_file="$PY_COMP_ROOT/shell/completion.bash"
        # shellcheck source=/dev/null
        source "$comp_file"
    else
        comp_file="$PY_COMP_ROOT/shell/readline_completion.bash"
        key_binding_file="$PY_COMP_ROOT/shell/readline_key_binding.bash"
        # shellcheck source=/dev/null
        source "$comp_file"
        # shellcheck source=/dev/null
        source "$key_binding_file"
    fi
}

if [ -d "$HOME/.pyfiledir" ]; then
    _setup_pyfiledir
fi


# nvm
export NVM_DIR="${XDG_CONFIG_HOME}/nvm"
function nvm() {
    # lazy load nvm https://github.com/nvm-sh/nvm/issues/1277
    printf "Lazy loading nvm..."
    if [ -n "$BASH_VERSION" ] && [ -d "$NVM_DIR" ]; then
        # shellcheck source=/dev/null
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        # shellcheck source=/dev/null
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
        nvm
    fi
}

# autojump
if [ -n "$BASH_VERSION" ] && [ -e "$HOME/.autojump" ]; then
    # shellcheck source=/dev/null
    [ -s "$HOME/.autojump/etc/profile.d/autojump.sh" ] && source "$HOME/.autojump/etc/profile.d/autojump.sh"
fi
