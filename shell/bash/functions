#!/usr/bin/env bash
# extended cd funtionality
function cd {
    local CWD
    if [[ "$1" == "" ]]; then
        if command -v git >/dev/null 2>&1 && [ -e "$(git rev-parse --show-toplevel 2>/dev/null)" ]; then
            CWD="$(pwd)"
            if [[ "$OSTYPE" == "msys" ]]; then
                CWD="$(pwd -W)"
            fi
            if [[ "$(git rev-parse --show-toplevel 2>/dev/null)" != "${CWD}" ]]; then
                builtin cd "$(git rev-parse --show-toplevel 2>/dev/null)" || return #toplevel of git repository
            elif [ -e "$(builtin cd ..; git rev-parse --show-toplevel 2>/dev/null)" ]; then
                builtin cd "$(builtin cd ..; git rev-parse --show-toplevel 2>/dev/null)" || return #toplevel of parent git repository
            else
                builtin cd || return # normal cd behaviour
            fi
        else
            builtin cd || return # normal cd behaviour
        fi
    elif [[ -f "$1" ]]; then # is it a file?
        builtin cd "$(dirname "$1")" || return #cd into enclosing directory
    else
        builtin cd "$1" || return # normal cd behaviour
    fi
}

function server {
    # port 8000 if no port is given. if the 'o' flag is passed, also
    # open the server in a browser.
    local COMMAND=$1;
    if [ "$COMMAND" = "-o" ]; then
        local PORT=${2:-8000}
        open "http://localhost:${PORT}/"
    else
        PORT=${1:-8000}
    fi

    local PY=python
    if command -v ipython >/dev/null 2>&1; then
        PY=ipython
    fi

    ${PY} -c "
import os
try:
    import http.server as httpserver  # py3
    import socketserver
except ImportError:
    import SimpleHTTPServer as httpserver
    import SocketServer as socketserver

Handler = httpserver.SimpleHTTPRequestHandler
m = Handler.extensions_map
m[''] = 'text/plain'
for k in m.keys():
    m[k] = m[k] + '; charset=UTF-8'
httpd = socketserver.TCPServer(('', int('${PORT}')), Handler)
pid = os.getpid()
print('Serving HTTP[pid: {}] on 0.0.0.0 port ${PORT} ...'.format(pid))
try:
    httpd.serve_forever()
except KeyboardInterrupt:
    print('\nInterrupt received, stopping...')
finally:
    httpd.socket.close()
"
}

function pipsrc {
    case "$1" in
        aliyun)
            export PIP_TRUSTED_HOST=mirrors.aliyun.com
            export PIP_INDEX_URL=http://mirrors.aliyun.com/pypi/simple/
            echo "using $1 pip source!!";;
        douban)
            export PIP_TRUSTED_HOST=pypi.douban.com
            export PIP_INDEX_URL=http://pypi.douban.com/simple/
            echo "using $1 pip source!!";;
        edu)
            export PIP_TRUSTED_HOST=pypi.tuna.tsinghua.edu.cn
            export PIP_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple/
            echo "using $1 pip source!!";;
        *)
            echo "unset pip source!!"
            unset PIP_TRUSTED_HOST
            unset PIP_INDEX_URL
            unset PIPENV_PYPI_MIRROR
    esac

    if [[ -n "$PIP_INDEX_URL"  ]]; then
        export PIPENV_PYPI_MIRROR=$PIP_INDEX_URL
    fi
}

function hex {
    local input
    input="$1"
    if [[ -f "$input" ]]; then
        echo "Hex value of file: $input"
        od -A n -t x1 "$input"
    else
        echo "Hex value of String: $input"
        echo -n "$input" | od -A n -t x1
    fi
}

function pip {
    # https://stackoverflow.com/questions/25399079/how-to-overwrite-a-bash-command
    command pip --version
    command pip "$@"
}
